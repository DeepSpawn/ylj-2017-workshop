// Generated by BUCKLESCRIPT VERSION 1.7.1, PLEASE EDIT WITH CARE
'use strict';

var List                         = require("bs-platform/lib/js/list.js");
var Curry                        = require("bs-platform/lib/js/curry.js");
var Mocha                        = require("mocha");
var Koan2x_Maps                  = require("./koans/koan2x_Maps.js");
var Koan2x_Sets                  = require("./koans/koan2x_Sets.js");
var Koan08_Maybe                 = require("./koans/koan08_Maybe.js");
var Koan09_Lists                 = require("./koans/koan09_Lists.js");
var Koan10_Arrays                = require("./koans/koan10_Arrays.js");
var Koan11_Tuples                = require("./koans/koan11_Tuples.js");
var Koan01_Expects               = require("./koans/koan01_Expects.js");
var Koan12_Results               = require("./koans/koan12_Results.js");
var Koan13_Strings               = require("./koans/koan13_Strings.js");
var Koan14_Records               = require("./koans/koan14_Records.js");
var Koan02_Literals              = require("./koans/koan02_Literals.js");
var Koan07_Functions             = require("./koans/koan07_Functions.js");
var Koan15_UnionTypes            = require("./koans/koan15_UnionTypes.js");
var Koan04_LogicalOperators      = require("./koans/koan04_LogicalOperators.js");
var Koan06_NumberConversions     = require("./koans/koan06_NumberConversions.js");
var Koan03_ComparisonOperators   = require("./koans/koan03_ComparisonOperators.js");
var Koan05_MathematicalOperators = require("./koans/koan05_MathematicalOperators.js");

function iterator(M) {
  return Curry._1(M[/* koans */0], /* () */0);
}

Mocha.describe("ReasonML bucklescript Koans", function () {
      return List.iter(iterator, /* :: */[
                  /* Koan01_Expects */[Koan01_Expects.koans],
                  /* :: */[
                    /* Koan02_Literals */[Koan02_Literals.koans],
                    /* :: */[
                      /* Koan03_ComparisonOperators */[Koan03_ComparisonOperators.koans],
                      /* :: */[
                        /* Koan04_LogicalOperators */[Koan04_LogicalOperators.koans],
                        /* :: */[
                          /* Koan05_MathematicalOperators */[Koan05_MathematicalOperators.koans],
                          /* :: */[
                            /* Koan06_NumberConversions */[Koan06_NumberConversions.koans],
                            /* :: */[
                              [Koan07_Functions.koans],
                              /* :: */[
                                /* Koan08_Maybe */[Koan08_Maybe.koans],
                                /* :: */[
                                  [Koan09_Lists.koans],
                                  /* :: */[
                                    [Koan10_Arrays.koans],
                                    /* :: */[
                                      /* Koan11_Tuples */[Koan11_Tuples.koans],
                                      /* :: */[
                                        /* Koan12_Results */[Koan12_Results.koans],
                                        /* :: */[
                                          /* Koan13_Strings */[Koan13_Strings.koans],
                                          /* :: */[
                                            [Koan14_Records.koans],
                                            /* :: */[
                                              /* Koan15_UnionTypes */[Koan15_UnionTypes.koans],
                                              /* :: */[
                                                [Koan2x_Maps.koans],
                                                /* :: */[
                                                  [Koan2x_Sets.koans],
                                                  /* [] */0
                                                ]
                                              ]
                                            ]
                                          ]
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ]);
    });

exports.iterator = iterator;
/*  Not a pure module */
