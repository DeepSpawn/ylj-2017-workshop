// Generated by BUCKLESCRIPT VERSION 1.7.1, PLEASE EDIT WITH CARE
'use strict';

var Block   = require("bs-platform/lib/js/block.js");
var Mocha   = require("mocha");
var Assert  = require("assert");
var Bresult = require("bs-containers/lib/js/src/bresult.js");
var Helpers = require("../helpers.js");

function koans() {
  Mocha.describe("Result", function () {
        Mocha.it("results represent the result of a function", function () {
              Assert.equal(/* Ok */Block.__(0, [42]), Helpers.__(/* () */0));
              return /* () */0;
            });
        Mocha.it("but could be an error", function () {
              Assert.equal(/* Error */Block.__(1, ["there was an error"]), Helpers.__(/* () */0));
              return /* () */0;
            });
        Mocha.it("a result can be converted to a maybe", function () {
              Assert.equal(Bresult.toOption(/* Ok */Block.__(0, [42])), Helpers.__(/* () */0));
              return /* () */0;
            });
        Mocha.it("but an error will become nothing", function () {
              Assert.equal(Bresult.toOption(/* Error */Block.__(1, ["there was an error"])), Helpers.__(/* () */0));
              return /* () */0;
            });
        Mocha.it("a maybe can also be converted to a result", function () {
              Assert.equal(Bresult.fromOption(/* Some */[42]), Helpers.__(/* () */0));
              return /* () */0;
            });
        Mocha.it("and will become an error if there is nothing", function () {
              Assert.equal(Bresult.fromOption(/* None */0), Helpers.__(/* () */0));
              return /* () */0;
            });
        return /* () */0;
      });
  return /* () */0;
}

exports.koans = koans;
/* mocha Not a pure module */
